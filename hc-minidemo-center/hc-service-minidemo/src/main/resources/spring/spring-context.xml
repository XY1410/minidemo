<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:config="https://crnlmchina.github.io/config"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           https://crnlmchina.github.io/config 
           https://crnlmchina.github.io/config/config.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-3.2.xsd"
       default-autowire="byName" default-lazy-init="false">

    <!-- 指定zookeeper地址、根节点、版本，获取占位符对应的数据 -->
    <config:profile connect-str="${zk.address}" root-node="${zk.root.node}"
                    version="${zk.configs.version}"/>
    <!-- 指定获取zookeeper上的节点 -->
    <config:placeholder>
        <config:group node="demo_dubbo"/>
        <config:group node="mq"/>
        <config:group node="demo_redis"/>
    </config:placeholder>

    <!-- 采用注释的方式配置bean -->
    <context:annotation-config/>
    <context:property-placeholder location="classpath:common.properties,db.properties"/>
    <context:component-scan base-package="com.gzhc365.minidemo"/>
    <!-- proxy-target-class默认"false",更改为"ture"使用CGLib动态代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--<import resource="classpath:id/component-id.xml"/>-->
    <import resource="classpath:spring/activemq-consumer.xml"/>
    <import resource="classpath:spring/dubbo-provider.xml"/>
    <import resource="classpath:spring/spring-datasource.xml"/>

    <!-- 异步任务配置 -->
    <task:executor id="taskExecutor" pool-size="5-10" queue-capacity="500"/>
    <task:annotation-driven executor="taskExecutor"/>

</beans>
